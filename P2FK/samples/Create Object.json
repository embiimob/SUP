{
  "urn": "IPFS:Qmex6VRDqwVCMPrc7ojtBWzUBPdQAmWq9FcprKTcgmbKX3/baby punch.glb",
  "img": "IPFS:QmPZ1xTXjoek9bkAHsPfPzonMtfWBwSw1x9pHFpPBsqNLr",
  "uri": "https://objkt.com/asset/KT19jjT5csLfggEe5B9zDM6fakvqU1p3Fpi6/0",
  "nme": "CryptoSkull #8354",
  "dsc": "His hand is over his eye.  He looked like a failed soldier. \nDirt seemed so worked into him that the lines of his face were like writing. Baby Punch liked to get in fights because it was in his nature but he really wanted to hold things softly and caress them but his power was too much.",
  "atr": {
    "strength": "yes"
  },
  "lic": "No License / All Rights Reserved",
  "cre": [ 0 ],
  "own": { "0": 1 }
}


//assume keyword order id 0 is the authorization address
//"cre": [ 0, 1 ] assume keyword order id 0 is the object address, keyword order id 1 is a creator address
//"own": { 0: 10000} assume keyword order id 0 owns a qty of 10000


//urn img & uri naming standards
//IPFS:Qma7o6Yx2HQfCkNJEHv1gpiDzoZU8rNc6JFQXijfyt8cGc  ( references an IPFS gif file creates a default file named {hash}\artifact )
//IPFS:Qmex6VRDqwVCMPrc7ojtBWzUBPdQAmWq9FcprKTcgmbKX3/baby punch.glb  ( references and IPFS file output file with given name {hash}\baby punch.glb )
//66e5f4df4bd0a3ea9b569498ed25f848e837b9dec7a2699c1d6756ae9560c962/8354.png  ( references mainchain - bitcoin testnet P2FK)
//MZC:c0c7fa9536e31e04a65252d8acec29af1c54cb0a44609af7fb9e3804065c7f19/chief-sitting-bull.jpg ( references sidechain - mazacoin production P2FK )
//BTC:3ff52882c93420c8fe4a90f6fa94b2a563316b5e7b83afe2ddd5bcadc86d3821/FakeUFO.png ( references sidechain - bitcoin production P2FK )
//http://bitfossil.org/7033eb8138de0d3f4be111a57dfb8319b400d3b6a6f5b387a22b334ebb998e93/EMBII.jpg ( references a http(s) address )

//ASCII free text urn registrations such as 'twitter.com' cannot begin with 'ipfs:',{transaction id},'MZC:','BTC:' or 'http'

//remove all unnecessary spaces
//place JSON in a file named OBJ (no file extension)
//enter #[first 20 charachters of urn] to create a URN registration in this example #66e5f4df4bd0a3ea9b56 in the apertus.io message box
//enter each additional @creatoraddress and or @owneraddress above the @objectaddress in the apertus.io message box in matching orders
//in this example keyword order id 1 would be the second from the bottom if the #66e5f4df4bd0a3ea9b56 URN was also being registered
//attach file OBJ using the apertus.io attach button
//create a new signature address in the signature list in apertus.io. select it.  this will be the object address
//verify that the no message box is checked.
//click the apertus.io etch button


// confirm creator deligation transaction example with numeric salt

{ "cre": [ 1234 ] }


// object element update transaction example

{ "lic": "CC0" }
